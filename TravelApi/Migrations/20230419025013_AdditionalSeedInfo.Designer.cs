// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelApi.Models;

#nullable disable

namespace TravelApi.Migrations
{
    [DbContext(typeof(TravelApiContext))]
    [Migration("20230419025013_AdditionalSeedInfo")]
    partial class AdditionalSeedInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TravelApi.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            DestinationId = 1,
                            City = "Bangkok",
                            Country = "Thailand",
                            DestinationName = "Wat Pho"
                        },
                        new
                        {
                            DestinationId = 2,
                            City = "Strasbourg",
                            Country = "France",
                            DestinationName = "Cathedral of Our Lady of Strasbourg"
                        },
                        new
                        {
                            DestinationId = 3,
                            City = "Dubrovnik",
                            Country = "Croatia",
                            DestinationName = "Trsteno Arboretum"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("starRating")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Author = "Bobby B",
                            DestinationId = 1,
                            ReviewBody = "Blah blah blah",
                            Title = "Beautiful Temples",
                            starRating = 4
                        },
                        new
                        {
                            ReviewId = 2,
                            Author = "Shelley G",
                            DestinationId = 1,
                            ReviewBody = "Blah de blah de blah",
                            Title = "Big Crowds",
                            starRating = 5
                        },
                        new
                        {
                            ReviewId = 3,
                            Author = "Alex R",
                            DestinationId = 2,
                            ReviewBody = "We done saw that pretty church",
                            Title = "Very nice and pretty",
                            starRating = 4
                        },
                        new
                        {
                            ReviewId = 4,
                            Author = "Jasmine L",
                            DestinationId = 3,
                            ReviewBody = "Fun trip to see where game of thrones was filmed",
                            Title = "A+ for game of thrones fans",
                            starRating = 5
                        },
                        new
                        {
                            ReviewId = 5,
                            Author = "Tucker B",
                            DestinationId = 2,
                            ReviewBody = "We loved the catherdral and city",
                            Title = "Great Food",
                            starRating = 3
                        },
                        new
                        {
                            ReviewId = 6,
                            Author = "Jenny C",
                            DestinationId = 1,
                            ReviewBody = "The weather was scortching",
                            Title = "Too Hot",
                            starRating = 1
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Review", b =>
                {
                    b.HasOne("TravelApi.Models.Destination", "destination")
                        .WithMany("Reviews")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("destination");
                });

            modelBuilder.Entity("TravelApi.Models.Destination", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
